version: "3.9"

services:
  django:
    build:
      context: .  # 현재 디렉토리를 빌드 컨텍스트로 지정
      dockerfile: Dockerfile  # Dockerfile의 경로 명시
    container_name: django
    ports:
      - "8000:8000"
    volumes:
      - .:/app  # 현재 디렉토리를 컨테이너 내부로 마운트
    command: sh -c "pip install -r requirements.txt && python manage.py runserver 0.0.0.0:8000"

  superset:
    build:
      context: .  # Dockerfile.superset이 위치한 경로
      dockerfile: Dockerfile.superset
    container_name: superset
    ports:
      - "8088:8088"
    environment:
      SUPERSET_DATABASE_URI: "postgresql+psycopg2://team3-2:Team3-2!@redshift:5432/dev"  # redshift 컨테이너로 설정
      SUPERSET_SECRET_KEY: ponyo_superset
    volumes:
      - ./superset:/app/superset_home
      - ./superset_config.py:/app/pythonpath/superset_config.py
      - ./requirements.txt:/app/pythonpath/requirements.txt
    depends_on:
      redshift:
        condition: service_healthy
    command: >
      sh -c "
      pip install -r /app/pythonpath/requirements.txt &&
      superset db upgrade &&
      superset init &&
      superset run -h 0.0.0.0 -p 8088
      "

  redshift:
  image: postgres:15
  container_name: redshift
  ports:
    - "5439:5432"
  environment:
    POSTGRES_USER: team3-2
    POSTGRES_PASSWORD: Team3-2!
    POSTGRES_DB: dev
  volumes:
    - redshift_data:/var/lib/postgresql/data
  healthcheck:
    test: ["CMD-SHELL", "pg_isready -U team3-2"]
    interval: 10s
    timeout: 5s
    retries: 5

volumes:
  redshift_data:
